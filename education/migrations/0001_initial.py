# Generated by Django 4.2.8 on 2024-03-24 03:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('related_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='education.class')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('steps', models.TextField(blank=True, null=True)),
                ('solution', models.TextField()),
                ('problem_type', models.CharField(choices=[('Fixed Answer', 'Fixed Answer'), ('Variable Answer', 'Variable Answer')], max_length=50)),
                ('answer_type', models.CharField(choices=[('Number', 'Number'), ('Text', 'Text'), ('Vector', 'Vector')], max_length=50)),
                ('related_lessons', models.ManyToManyField(related_name='problems', to='education.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('source', models.CharField(choices=[('Lecture', 'Lecture'), ('Student', 'Student')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('related_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcripts', to='education.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('schema', models.TextField()),
                ('description', models.TextField()),
                ('associated_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tools', to='education.problem')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_area', models.TextField()),
                ('date', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('related_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='education.class')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=9)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('class_belongs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='education.class')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_lessons', models.ManyToManyField(to='education.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='notes/')),
                ('text_summary', models.TextField(blank=True, null=True)),
                ('related_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='education.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pdf', models.FileField(upload_to='books/')),
                ('index_contents', models.TextField(blank=True, null=True)),
                ('page_count', models.IntegerField()),
                ('related_class', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book', to='education.class')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateTimeField()),
                ('pdf', models.FileField(blank=True, null=True, upload_to='assignments/')),
                ('related_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='education.class')),
            ],
        ),
    ]
